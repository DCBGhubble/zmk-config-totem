//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    combos {
        compatible = "zmk,combos";

        COMSpace {
            bindings = <&kp SPACE>;
            key-positions = <13 14>;
        };

        COMBck {
            bindings = <&kp DELETE>;
            key-positions = <5 6>;
        };

        hometoggle {
            bindings = <&to 0>;
            key-positions = <16 17 18>;
        };

        mousetoggle {
            bindings = <&to 2>;
            key-positions = <6 7 8>;
        };

        bluetoothclear {
            bindings = <&bt BT_CLR>;
            key-positions = <0 1 2 3>;
        };

        COMback {
            bindings = <&kp BACKSPACE>;
            key-positions = <15 16>;
        };

        COMtab {
            bindings = <&kp TAB>;
            key-positions = <3 4>;
        };

        COMBLE {
            bindings = <&to 3>;
            key-positions = <27 28 29>;
        };
    };

    behaviors {
        HomerowL: HomerowL {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROWL";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 26 27 28 29 30 31 35 36 37>;
            require-prior-idle-ms = <100>;
            quick-tap-ms = <170>;
        };

        HomerowR: HomerowR {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROWR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 25 32 33 34>;
            quick-tap-ms = <170>;
            require-prior-idle-ms = <100>;
        };

        TapKHoldL: TapKHoldL {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPKHOLDL";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        Mouse: Mouse {
            compatible = "zmk,behavior-mouse-key-press";
            label = "MOUSE";
            #binding-cells = <1>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
           &kp Q  &kp W  &kp E                     &kp R                   &kp T                 &kp Y               &kp U                    &kp I                      &kp O    &kp P
           &kp A  &kp S  &HomerowL LEFT_CONTROL D  &HomerowL LEFT_SHIFT F  &kp G                 &kp H               &HomerowR RIGHT_SHIFT J  &HomerowR RIGHT_CONTROL K  &kp L    &kp SEMICOLON
&kp MINUS  &kp Z  &kp X  &kp C                     &kp V                   &kp B                 &kp N               &kp M                    &kp COMMA                  &kp DOT  &kp FSLH       &kp APOS
                         &TapKHoldL 2 ESCAPE       &kp TAB                 &TapKHoldL 1 SPACE    &TapKHoldL 1 ENTER  &kp SPACE                &kp RIGHT_ALT
            >;
        };

        nav_num {
            bindings = <
              &kp N1     &kp N2  &kp N3          &kp N4     &kp N5       &kp LEFT_BRACKET   &kp HOME        &kp UP_ARROW     &kp END    &kp MINUS
              &kp N6     &kp N7  &kp N8          &kp N9     &kp N0       &kp RIGHT_BRACKET  &kp LEFT_ARROW  &kp DOWN         &kp RIGHT  &none
&kp LA(LEFT)  &kp LC(A)  &none   &kp LC(X)       &kp LC(C)  &kp LC(V)    &kp LC(Z)          &kp RC(Y)       &none            &none      &kp RIGHT_SHIFT  &kp CARET
                                 &kp LEFT_SHIFT  &none      &none        &none              &none           &kp RIGHT_SHIFT
            >;
        };

        sym_func {
            bindings = <
                  &kp PAGE_UP    &none           &mmv MOVE_UP        &none            &none        &none          &none     &none     &none  &msc SCRL_UP
                  &kp PAGE_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN      &mmv MOVE_RIGHT  &none        &none          &mkp MB1  &mkp MB2  &none  &msc SCRL_DOWN
&kp LEFT_CONTROL  &none          &none           &none               &none            &none        &none          &none     &none     &none  &none           &kp RIGHT_SHIFT
                                                 &kp LA(LEFT_ARROW)  &none            &kp LCTRL    &kp BACKSPACE  &none     &none
            >;
        };

        device {
            bindings = <
       &none       &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &none             &none    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
       &kp K_MUTE  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp C_PLAY_PAUSE  &none    &none         &none         &none         &none         &none
&none  &none       &none                 &none                 &none             &none    &none         &none         &none         &none         &none         &bt BT_CLR
                                         &none                 &none             &none    &none         &none         &none
            >;
        };

        extra1 { status = "reserved"; };

        extra2 { status = "reserved"; };

        extra3 { status = "reserved"; };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        device {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
